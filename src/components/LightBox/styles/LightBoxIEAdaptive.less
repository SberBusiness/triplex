@import 'src/styles/style';

// Миксин скролл-зависимых стилей.
/* stylelint-disable-next-line */ // Линтер воспринимает миксины как дублирующиеся селекторы.
each(@scroll-sizes, {
    @scroll-width: @value;
    @scroll-width-px: ~'@{scroll-width}px';
    // Ширина экрана без скрола.
    @screen-width-without-scroll: calc(100vw - @scroll-width-px);

    html.LightBoxIE.scroll-@{scroll-width} {
        .lightBox {
            .lightBoxBackdrop {
                width: @screen-width-without-scroll;
            }
        }

        /*
          Breakpoint до которого стрелки находятся наверху лайтбокса.
          Тело лайтбокса фиксированной ширины(@lightBox-content-min-width), после начинает увеличиваться до @lightBox-content-max-width.
        */
        @media (max-width: (@lightBox-media-point-1 + @scroll-width)) {
            // Ширина тела лайтбокса.
            @lightBox-content-width: @lightBox-content-min-width;
            // Левая позиция лайтбокса.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);
            // Левая позиция стрелки 'Назад'.
            @lightBox-arrow-prev-left: 32px;
            // Левая позиция стрелки 'Вперед'.
            @lightBox-arrow-next-left: 72px;
            // Правая позиция кнопки 'Закрыть'.
            @lightBox-close-right: 32px;

            .lightBoxContent,
            .lightBoxControls,
            .lightBoxContent > .loadingContentOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }

            .lightBoxPrev,
            .lightBoxNext,
            .lightBoxClose {
                top: 24px;
                position: absolute;
            }

            .lightBoxPrev {
                left: @lightBox-arrow-prev-left;
            }

            .lightBoxNext {
                left: @lightBox-arrow-next-left;
            }

            .lightBoxClose {
                right: @lightBox-close-right;
            }
        }

        /*
          Breakpoints в которых растет тело лайтбокса до @lightBox-content-max-width.
         */
        @media (min-width: @lightBox-media-point-1 + @scroll-width) and (max-width: @lightBox-media-point-2 + @scroll-width) {
            // Ширина тела лайтбокса.
            @lightBox-content-width: calc(@screen-width-without-scroll - @lightBox-arrow-with-margin-width * 2);
            // Левая позиция лайтбокса.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);
            // Левая позиция стрелки 'Назад'.
            @lightBox-arrow-prev-left: calc(@lightBox-content-left - (@lightBox-arrow-width + 16px));
            // Левая позиция стрелки 'Вперед'.
            @lightBox-arrow-next-left: calc(@lightBox-content-left + @lightBox-content-width + 16px);
            // Левая позиция кнопки 'Закрыть'.
            @lightBox-close-left: @lightBox-arrow-next-left;

            .lightBoxContent,
            .lightBoxControls,
            .lightBoxContent > .loadingContentOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }

            .lightBoxPrev,
            .lightBoxNext {
                top: 50%;
                transform: translateY(-50%);
                position: fixed;
            }

            .lightBoxPrev {
                left: @lightBox-arrow-prev-left;
            }

            .lightBoxNext {
                left: @lightBox-arrow-next-left;
            }

            .lightBoxClose {
                top: @ufs-theme-base*4;
                left: @lightBox-close-left;
                position: fixed;
            }
        }

        /*
          Breakpoint после которого ширина лайтбокса равна @lightBox-content-max-width, центруется относительно экрана.
         */
        @media (min-width: @lightBox-media-point-2 + @scroll-width) {
            // Ширина тела лайтбокса.
            @lightBox-content-width: @lightBox-content-max-width;
            // Левая позиция лайтбокса. (Ширина экрана до скролла - ширина лайтбокса) / 2.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);
            // Левая позиция стрелки 'Назад'.
            @lightBox-arrow-prev-left: calc(@lightBox-content-left - @lightBox-arrow-width - 16px);
            // Левая позиция стрелки 'Вперед'.
            @lightBox-arrow-next-left: calc(@lightBox-content-left + @lightBox-content-width + 16px);
            // Левая позиция кнопки 'Закрыть'.
            @lightBox-close-left: @lightBox-arrow-next-left;

            .lightBoxContent,
            .lightBoxControls,
            .lightBoxContent > .loadingContentOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }

            .lightBoxPrev,
            .lightBoxNext {
                top: 50%;
                transform: translateY(-50%);
                position: fixed;
            }

            .lightBoxPrev {
                left: @lightBox-arrow-prev-left;
            }

            .lightBoxNext {
                left: @lightBox-arrow-next-left;
            }

            .lightBoxClose {
                top: @ufs-theme-base*4;
                left: @lightBox-close-left;
                position: fixed;
            }
        }

        @media (min-width: (@lightBox-media-point-1 + @scroll-width)) {
            .lightBox {
                &.lightBoxSideOverlayActive,
                &.lightBoxTopOverlayActive,
                &.isLoading {
                    .lightBoxClose,
                    .lightBoxPrev,
                    .lightBoxNext {
                        display: none;
                    }
                }
            }

            .lightBoxControls {
                height: @lightBox-controls-closed-height;
                position: static;
                z-index: @z-index-lightbox-controls;

                .lightBoxControlsBig {
                    display: block;
                }

                .lightBoxControlsSmall {
                    display: none;
                }
            }
        }

        /*
          Breakpoint для экранов менее 1024px.
        */
        @media (max-width: (@lightBox-media-point-0 + @scroll-width)) {
            // Ширина лайтбокса/контролов/хедера/футера.
            @lightBox-content-width: @lightBox-content-min-width;
            // Левая позиция лайтбокса.
            @lightBox-content-left: 0;

            .lightBox {
                position: fixed;
                min-width: 0;
                width: 100%;

                &.lightBoxSideOverlayActive {
                    overflow: hidden;
                }
            }

            .lightBoxControls {
                position: absolute;
                width: @lightBox-content-min-width;
                top: 0;
            }

            .lightBoxContent,
            .lightBoxControls,
            .lightBoxContent > .loadingContentOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }

            .lightBox .lightBoxContent {
                box-sizing: border-box;
            }
        }
    }
})
