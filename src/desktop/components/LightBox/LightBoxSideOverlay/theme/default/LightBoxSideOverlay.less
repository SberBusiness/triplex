@import '../../../../../common/theme/default';

.lightBoxSideOverlayMask {
    transition: opacity 0s;
}

.lightBoxSideOverlayWrapper {
    position: fixed;
    min-height: calc(100% - var(--lightBox-screen-top));
    top: var(--lightBox-screen-top);
    left: 0;
    width: 0;
    z-index: @z-index-step * 2;
    overflow-y: auto;
    // Чтобы элементы оверлея не получали фокус, когда он скрыт.
    visibility: hidden;

    &.overflowXHidden {
        overflow-x: hidden;
    }

    &.overflowYHidden {
        overflow-y: hidden;
    }

    &.closing,
    &.opened {
        visibility: visible;
        // IE11.
        right: 0;
        // IE11.
        width: auto;
        left: var(--lightBox-screen-left);
        width: var(--lightBox-screen-width);
    }

    &.closing {
        pointer-events: none;
    }

    .lightBoxSideOverlayContent {
        position: relative;
        margin-left: auto;
        background: @color-snowy;
        box-shadow: -13px 0 17px 0 rgba(0, 0, 0, 0.14);
        transform: translateX(100%);
        transition: transform 0.6s;

        &.opened {
            // Убирается контекст для вложенных элементов с position: fixed.
            transform: none;
        }

        &.opening {
            transform: translateX(0);
        }

        .spinnerWrapper {
            left: 0;
            top: 0;
            right: 0;
            height: 100vh;
            position: absolute;
            z-index: @page-header-sticky-z-index + @z-index-step;
        }
    }

    // Открыт SideOverlay поверх текущего.
    &.openedTopLevelSideOverlay {
        .lightBoxSideOverlayContent {
            box-shadow: -13px 0 17px 0 rgba(0, 0, 0, 0.5);
        }
    }

    &.sizeSM .lightBoxSideOverlayContent {
        width: @sideOverlaySMWidth;
        // На мобильном устройстве, ширина не более ширины экрана.
        max-width: 100%;
    }

    &.sizeMD .lightBoxSideOverlayContent {
        width: @sideOverlayMDWidth;
        // На мобильном устройстве, ширина не более ширины экрана.
        max-width: 100%;
    }

    &.sizeLG .lightBoxSideOverlayContent {
        width: @sideOverlayLGWidth;
        // На мобильном устройстве, ширина не более ширины экрана.
        max-width: 100%;
    }

    .lightBoxSideOverlayBase {
        overflow: visible;
        bottom: auto;
        height: 100%;
    }

    @media (max-width: @screen-sm-max) {
        // На мобильных устройствах блок с кнопкой закрыть не должен уезжать на вторую строку.
        .globalHeaderTitleControls {
            position: absolute;
            top: 0;
            right: 20px;
        }

        .globalHeaderTitleContentText {
            // На мобильных устройствах отступ справа, чтобы не наезжать на кнопку закрыть.
            padding-right: 40px !important;
        }
    }
}

.lightBoxSideOverlay {
    display: flex;
    position: absolute;
    top: 0;
    min-height: 100%;

    &.closing,
    &.opening {
        overflow-x: hidden;
    }
}

.lightBoxSideOverlayCloseButton {
    position: relative;
    top: 6px;
}

// Миксин скролл-зависимых стилей.
each(@scroll-sizes, {
    @scroll-width: @value;
    @scroll-width-px: ~'@{scroll-width}px';
    // Ширина экрана без скрола.
    @screen-width-without-scroll: calc(var(--lightBox-screen-width) - @scroll-width-px);

    html:not(.LightBoxIE).scroll-@{scroll-width} {
        /*
          Breakpoint до которого стрелки находятся наверху лайтбокса.
          Тело лайтбокса фиксированной ширины(@lightBox-content-min-width), после начинает увеличиваться до @lightBox-content-max-width.
        */
        .LB-less-or-equal-media-point-1-no-hash {
            // Ширина тела лайтбокса.
            @lightBox-content-width: @lightBox-content-min-width;
            // Левая позиция лайтбокса.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);

            .lightBoxSideOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }
        }

        /*
          Breakpoints в которых растет тело лайтбокса до @lightBox-content-max-width.
         */
        .LB-more-media-point-1-no-hash.LB-less-or-equal-media-point-2-no-hash {
            // Ширина тела лайтбокса.
            @lightBox-content-width: calc(@screen-width-without-scroll - @lightBox-arrow-with-margin-width * 2);
            // Левая позиция лайтбокса.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);

            .lightBoxSideOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }
        }

        /*
          Breakpoint после которого ширина лайтбокса равна @lightBox-content-max-width, центруется относительно экрана.
         */
        .LB-more-media-point-2-no-hash {
            // Ширина тела лайтбокса.
            @lightBox-content-width: @lightBox-content-max-width;
            // Левая позиция лайтбокса.
            @lightBox-content-left: calc((@screen-width-without-scroll - @lightBox-content-width) / 2);

            .lightBoxSideOverlay {
                left: @lightBox-content-left;
                width: @lightBox-content-width;
            }
        }

        /*
          Breakpoint для размера менее 1024px.
        */
        .LB-less-or-equal-media-point-0-no-hash {
            .lightBoxSideOverlay {
                left: 0;
                width: 100%;
            }

            .lightBoxSideOverlayWrapper.opened {
                left: var(--lightBox-screen-left);
                width: var(--lightBox-screen-width);
                position: fixed;
                right: auto;
            }
        }
    }
})
